// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {application} from '../models';
import {metricservice} from '../models';
import {uuid} from '../models';
import {operationservice} from '../models';
import {packageservice} from '../models';
import {projectservice} from '../models';
import {pack} from '../models';

export function AddPackage(arg1:string):Promise<void>;

export function AddProjectPackage(arg1:application.AddProjectPackageOpts):Promise<void>;

export function AggregateMetrics(arg1:metricservice.FilterOptions):Promise<metricservice.Aggregate>;

export function CancelOperation(arg1:uuid.UUID):Promise<void>;

export function CreateProjectOperation(arg1:application.CreateProjectOperationOpts):Promise<uuid.UUID>;

export function DeleteProject(arg1:uuid.UUID):Promise<void>;

export function ExploreProject(arg1:uuid.UUID):Promise<void>;

export function GetDetails():Promise<application.Details>;

export function GetOperation(arg1:uuid.UUID):Promise<operationservice.Operation>;

export function GetPackage(arg1:uuid.UUID):Promise<packageservice.GetPackageResponse>;

export function GetPreferences():Promise<application.Preferences>;

export function GetProject(arg1:uuid.UUID):Promise<projectservice.GetProjectResponse>;

export function InstallPackageOperation(arg1:uuid.UUID):Promise<uuid.UUID>;

export function ListMetrics(arg1:metricservice.FilterOptions):Promise<Array<metricservice.Metric>>;

export function ListOperations():Promise<Array<operationservice.Operation>>;

export function ListPackages(arg1:string,arg2:pack.PackageType,arg3:boolean):Promise<packageservice.ListPackagesResponse>;

export function ListProjects(arg1:string):Promise<projectservice.ListProjectsResponse>;

export function LongRunningOperation():Promise<uuid.UUID>;

export function LongRunningRequestWithCancellation(arg1:uuid.UUID):Promise<void>;

export function OpenDirectoryDialog(arg1:application.OpenDialogOptions):Promise<string>;

export function OpenExplorer(arg1:application.OpenExplorerOptions):Promise<void>;

export function OpenFileDialog(arg1:application.OpenDialogOptions):Promise<string>;

export function Quit():Promise<void>;

export function RefreshPackages():Promise<void>;

export function RemoveProjectPackage(arg1:application.RemoveProjectPackageOpts):Promise<void>;

export function RenderProject(arg1:uuid.UUID):Promise<void>;

export function RunProject(arg1:uuid.UUID):Promise<void>;

export function UninstallPackage(arg1:uuid.UUID):Promise<void>;

export function UpdatePreferences(arg1:application.UpdatePreferencesOpts):Promise<void>;

export function UpdateProject(arg1:application.UpdateProjectOpts):Promise<void>;
